// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`packem swc > should generate shared common chunks with SWC transformer > entry1.cjs output 1`] = `
"'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const _ts_add_disposable_resource = require('@swc/helpers/_/_ts_add_disposable_resource');
const _ts_dispose_resources = require('@swc/helpers/_/_ts_dispose_resources');
const foo = require('./chunks/foo-mpG0YmOC.js');

class Bar {
    method() {
        let s = {
            stack: [],
            error: void 0,
            hasError: false
        };
        try {
            let o = _ts_add_disposable_resource._(s, {
                [Symbol.dispose]: ()=>{
                    console.log('Hooray!');
                }
            }, false);
            console.log('using resource', o);
        } catch (r) {
            s.error = r, s.hasError = true;
        } finally{
            _ts_dispose_resources._(s);
        }
    }
}

const entry1 = ()=>{
    let t = new Bar(), e = new foo.Foo();
    return t.method(), e.foo();
};

exports.entry1 = entry1;
"
`;

exports[`packem swc > should generate shared common chunks with SWC transformer > entry1.mjs output 1`] = `
"import { _ } from '@swc/helpers/_/_ts_add_disposable_resource';
import { _ as _$1 } from '@swc/helpers/_/_ts_dispose_resources';
import { F as Foo } from './chunks/foo-D9eO44TF.js';

class Bar {
    method() {
        let s = {
            stack: [],
            error: void 0,
            hasError: false
        };
        try {
            let o = _(s, {
                [Symbol.dispose]: ()=>{
                    console.log('Hooray!');
                }
            }, false);
            console.log('using resource', o);
        } catch (r) {
            s.error = r, s.hasError = true;
        } finally{
            _$1(s);
        }
    }
}

const entry1 = ()=>{
    let t = new Bar(), e = new Foo();
    return t.method(), e.foo();
};

export { entry1 };
"
`;

exports[`packem swc > should generate shared common chunks with SWC transformer > entry2.cjs output 1`] = `
"'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const foo = require('./chunks/foo-mpG0YmOC.js');

class Index {
    async method() {
        let e = {
            a: 1
        }, s = {
            b: 2
        };
        console.log({
            ...e,
            ...s
        }, Object.assign({}, e, s));
    }
}

const entry2 = ()=>{
    let r = new Index(), t = new foo.Foo();
    return r.method(), t.foo();
};

exports.entry2 = entry2;
"
`;

exports[`packem swc > should generate shared common chunks with SWC transformer > entry2.mjs output 1`] = `
"import { F as Foo } from './chunks/foo-D9eO44TF.js';

class Index {
    async method() {
        let e = {
            a: 1
        }, s = {
            b: 2
        };
        console.log({
            ...e,
            ...s
        }, Object.assign({}, e, s));
    }
}

const entry2 = ()=>{
    let r = new Index(), t = new Foo();
    return r.method(), t.foo();
};

export { entry2 };
"
`;

exports[`packem swc > should handle modern TypeScript syntax with SWC transformer > modern features index.cjs output 1`] = `
"'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const ModernFeatures = require('./packem_shared/ModernFeatures-_PiaGHPC.cjs');



exports.ModernFeatures = ModernFeatures.ModernFeatures;
"
`;

exports[`packem swc > should handle modern TypeScript syntax with SWC transformer > modern features index.d.ts output 1`] = `
"declare class ModernFeatures {
    useResource(): {
        [Symbol.dispose]: () => any;
    };
    processData(): Promise<{
        name: string;
        id: number;
    }>;
    safeAccess(obj?: {
        nested?: {
            value?: string;
        };
    }): string;
}

export { ModernFeatures };
"
`;

exports[`packem swc > should handle modern TypeScript syntax with SWC transformer > modern features index.mjs output 1`] = `
"export { ModernFeatures } from './packem_shared/ModernFeatures-BBrtpOUg.mjs';
"
`;

Index: diff.patch
===================================================================
--- diff.patch
+++ diff.patch
@@ -1,18 +1,14 @@
 // index.d.ts
-type Getters<T> = {
-  [K in keyof T as `get${Capitalize<string & K>}`]: () => T[K]
-}
+type Getters<T> = { [K in keyof T as `get${Capitalize<string & K>}`]: () => T[K] }
 type MyExclude<T, U> = T extends U ? never : T
 interface Person {
   name: string
   age: number
   location: string
 }
 type LazyPerson = Getters<Person>
-type RemoveKindField<T> = {
-  [K in keyof T as MyExclude<K, "kind">]: T[K]
-}
+type RemoveKindField<T> = { [K in keyof T as MyExclude<K, "kind">]: T[K] }
 interface Circle {
   kind: "circle"
   radius: number
 }
